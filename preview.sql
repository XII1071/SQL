SELECT
  *
FROM
  EMP01;  

-- 테이블 생성, 수정, 삭제
CREATE TABLE ALTER TABLE DROP TABLE
 -- DML (데이터 CRUD) : 데이터 삽입, 수정, 삭제
INSERT INTO ~~~~VALUE ~~~~~ UPDATE SET WHERE DELETE FROM ~~~ WHERE ~~~
 -- TCL (트랙잭션 관리 언어)
COMMIT : 실행업무 (
  트랜잭션
) 영구저장 ROLLBACK : 실행 수행업무 (
  트랜잭션
) 모두 취소
 -- SELECT 문으로 조회할 떄 중복이 되는 것을 제거하는 연산자
DISTINCT
 -- 그룹 함수를 포함한 조건문을 기술할 수 있는 절
  SELECT
  FROM
  WHERE
  GROUP BY
  HAVING
  ORDER BY;

-- 여러개의 값을 동시에 확인하는 연산자

-- 데이터 입력 수정 삭제 컴퓨터 시험

-- 각 장의  마지막 연습문제 
-- 8장 1번, 3번

SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
  FROM EMP01 E, DEPT01 D
 WHERE E.DEPTNO = D.DEPTNO
   AND E.SAL > 2000;

--SQL-99 방식
SELECT DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
  FROM EMP01 E NATURAL JOIN DEPT01 D
 WHERE E.SAL > 2000;  

-- 8-3
--SQL-99 이전 방식
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
  FROM EMP01 E, DEPT D
 WHERE E.DEPTNO(+) = D.DEPTNO
ORDER BY D.DEPTNO, E.ENAME;

--SQL-99 방식
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.JOB, E.SAL
  FROM EMP01 E RIGHT OUTER JOIN DEPT D ON (E.DEPTNO = D.DEPTNO)
ORDER BY D.DEPTNO, E.ENAME;

--문제 3
--SQL-99 이전 방식
SELECT D.DEPTNO,D.DNAME,E.EMPNO,E.ENAME,E.JOB,E.SAL
FROM DEPT D, EMP E
WHERE D.DEPTNO = E.DEPTNO(+)
ORDER BY D.DEPTNO, E.ENAME;

--SQL-99 이후 방식
SELECT D.DEPTNO,D.DNAME,E.EMPNO,E.ENAME,E.JOB,E.SAL
FROM DEPT D LEFT OUTER JOIN EMP E ON (D.DEPTNO=E.DEPTNO)
ORDER BY D.DEPTNO, E.ENAME;

5장 1번 
-- 5-1
-- EMP 테이블에 사원이름이 S자로 끝나는 사원의 데이터를 모두 출력
SELECT *
  FROM EMP01
 WHERE ENAME LIKE '%S';
9장 2번 4번


-- 9-2
SELECT E.EMPNO, E.ENAME, D.DNAME, E.HIREDATE, D.LOC, E.SAL, S.GRADE
  FROM EMP E, DEPT D, SALGRADE S
 WHERE E.DEPTNO = D.DEPTNO
   AND E.SAL BETWEEN S.LOSAL AND S.HISAL
   AND SAL > (SELECT AVG(SAL)
                FROM EMP)
ORDER BY E.SAL DESC, E.EMPNO; 

-- 9-4
-- 다중행 함수 사용하지 않는 방법
SELECT E.EMPNO, E.ENAME, E.SAL, S.GRADE
  FROM EMP E, SALGRADE S
 WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
   AND SAL > (SELECT MAX(SAL)
                FROM EMP
               WHERE JOB = 'SALESMAN')
ORDER BY E.EMPNO; 

